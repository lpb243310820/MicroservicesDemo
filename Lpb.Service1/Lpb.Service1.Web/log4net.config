<?xml version="1.0" encoding="utf-8"?>
<log4net>
  <!--按日期分割日志文件 一天一个-->
  <appender name="errorAppender" type="log4net.Appender.RollingFileAppender">
    <file value="App_Data\error\log.txt" />

    <!--追加日志内容-->
    <appendToFile value="true" />

    <!--防止多线程时不能写Log,官方说线程非安全-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

    <!--可以为:Once|Size|Date|Composite-->
    <!--Composite为Size和Date的组合-->
    <rollingStyle value="Composite" />

    <!--当备份文件时,为文件名加的后缀-->
    <datePattern value="yyyyMMdd.log" />

    <!--日志最大个数,都是最新的-->
    <!--rollingStyle节点为Size时,只能有value个日志-->
    <!--rollingStyle节点为Composite时,每天有value个日志-->
    <maxSizeRollBackups value="20" />

    <!--可用的单位:KB|MB|GB-->
    <maximumFileSize value="3MB" />

    <!--置为true,当前最新日志文件名永远为file节中的名字-->
    <staticLogFileName value="true" />

    <!--输出级别在INFO和ERROR之间的日志-->
    <!--<filter type="log4net.Filter.LevelRangeFilter">
			<param name="LevelMin" value="INFO" />
			<param name="LevelMax" value="FATAL" />
		</filter>-->

    <!--必须结合起来用,第一个只过滤出WARN,第二个拒绝其它其它日志输出-->
    <filter type="log4net.Filter.LevelMatchFilter">
      <param name="LevelToMatch" value="Error" />
    </filter>
    <filter type="log4net.Filter.DenyAllFilter" />

    <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
		%n(new line):换行 
		%d(datetime):输出当前语句运行的时刻 
		%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
		%t(thread id):当前语句所在的线程ID 
		%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
		%c(class):当前日志对象的名称，例如：
		%f(file):输出语句所在的文件名。
		%l(line)：输出语句所在的行号。-->

    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
    </layout>
  </appender>

  <appender name="infoAppender" type="log4net.Appender.RollingFileAppender">
    <file value="App_Data\info\log.txt" />

    <!--追加日志内容-->
    <appendToFile value="true" />

    <!--防止多线程时不能写Log,官方说线程非安全-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

    <!--可以为:Once|Size|Date|Composite-->
    <!--Composite为Size和Date的组合-->
    <rollingStyle value="Composite" />

    <!--当备份文件时,为文件名加的后缀-->
    <datePattern value="yyyyMMdd.log" />

    <!--日志最大个数,都是最新的-->
    <!--rollingStyle节点为Size时,只能有value个日志-->
    <!--rollingStyle节点为Composite时,每天有value个日志-->
    <maxSizeRollBackups value="20" />

    <!--可用的单位:KB|MB|GB-->
    <maximumFileSize value="3MB" />

    <!--置为true,当前最新日志文件名永远为file节中的名字-->
    <staticLogFileName value="true" />

    <!--输出级别在INFO和ERROR之间的日志-->
    <!--<filter type="log4net.Filter.LevelRangeFilter">
			<param name="LevelMin" value="INFO" />
			<param name="LevelMax" value="FATAL" />
		</filter>-->

    <!--必须结合起来用,第一个只过滤出WARN,第二个拒绝其它其它日志输出-->
    <filter type="log4net.Filter.LevelMatchFilter">
      <param name="LevelToMatch" value="INFO" />
    </filter>
    <filter type="log4net.Filter.DenyAllFilter" />

    <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
		%n(new line):换行 
		%d(datetime):输出当前语句运行的时刻 
		%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
		%t(thread id):当前语句所在的线程ID 
		%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
		%c(class):当前日志对象的名称，例如：
		%f(file):输出语句所在的文件名。
		%l(line)：输出语句所在的行号。-->

    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
    </layout>
  </appender>

  <appender name="debugAppender" type="log4net.Appender.RollingFileAppender">
    <file value="App_Data\debug\log.txt" />

    <!--追加日志内容-->
    <appendToFile value="true" />

    <!--防止多线程时不能写Log,官方说线程非安全-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

    <!--可以为:Once|Size|Date|Composite-->
    <!--Composite为Size和Date的组合-->
    <rollingStyle value="Composite" />

    <!--当备份文件时,为文件名加的后缀-->
    <datePattern value="yyyyMMdd.log" />

    <!--日志最大个数,都是最新的-->
    <!--rollingStyle节点为Size时,只能有value个日志-->
    <!--rollingStyle节点为Composite时,每天有value个日志-->
    <maxSizeRollBackups value="20" />

    <!--可用的单位:KB|MB|GB-->
    <maximumFileSize value="3MB" />

    <!--置为true,当前最新日志文件名永远为file节中的名字-->
    <staticLogFileName value="true" />

    <!--输出级别在INFO和ERROR之间的日志-->
    <!--<filter type="log4net.Filter.LevelRangeFilter">
			<param name="LevelMin" value="INFO" />
			<param name="LevelMax" value="FATAL" />
		</filter>-->

    <!--必须结合起来用,第一个只过滤出WARN,第二个拒绝其它其它日志输出-->
    <filter type="log4net.Filter.LevelMatchFilter">
      <param name="LevelToMatch" value="DEBUG" />
    </filter>
    <filter type="log4net.Filter.DenyAllFilter" />

    <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
		%n(new line):换行 
		%d(datetime):输出当前语句运行的时刻 
		%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
		%t(thread id):当前语句所在的线程ID 
		%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
		%c(class):当前日志对象的名称，例如：
		%f(file):输出语句所在的文件名。
		%l(line)：输出语句所在的行号。-->

    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
    </layout>
  </appender>

  <appender name="fatalAppender" type="log4net.Appender.RollingFileAppender">
    <file value="App_Data\fatal\log.txt" />

    <!--追加日志内容-->
    <appendToFile value="true" />

    <!--防止多线程时不能写Log,官方说线程非安全-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

    <!--可以为:Once|Size|Date|Composite-->
    <!--Composite为Size和Date的组合-->
    <rollingStyle value="Composite" />

    <!--当备份文件时,为文件名加的后缀-->
    <datePattern value="yyyyMMdd.log" />

    <!--日志最大个数,都是最新的-->
    <!--rollingStyle节点为Size时,只能有value个日志-->
    <!--rollingStyle节点为Composite时,每天有value个日志-->
    <maxSizeRollBackups value="20" />

    <!--可用的单位:KB|MB|GB-->
    <maximumFileSize value="3MB" />

    <!--置为true,当前最新日志文件名永远为file节中的名字-->
    <staticLogFileName value="true" />

    <!--输出级别在INFO和ERROR之间的日志-->
    <!--<filter type="log4net.Filter.LevelRangeFilter">
			<param name="LevelMin" value="INFO" />
			<param name="LevelMax" value="FATAL" />
		</filter>-->

    <!--必须结合起来用,第一个只过滤出WARN,第二个拒绝其它其它日志输出-->
    <filter type="log4net.Filter.LevelMatchFilter">
      <param name="LevelToMatch" value="FATAL" />
    </filter>
    <filter type="log4net.Filter.DenyAllFilter" />

    <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
		%n(new line):换行 
		%d(datetime):输出当前语句运行的时刻 
		%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
		%t(thread id):当前语句所在的线程ID 
		%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
		%c(class):当前日志对象的名称，例如：
		%f(file):输出语句所在的文件名。
		%l(line)：输出语句所在的行号。-->

    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
    </layout>
  </appender>

  <appender name="warnAppender" type="log4net.Appender.RollingFileAppender">
    <file value="App_Data\warn\log.txt" />

    <!--追加日志内容-->
    <appendToFile value="true" />

    <!--防止多线程时不能写Log,官方说线程非安全-->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

    <!--可以为:Once|Size|Date|Composite-->
    <!--Composite为Size和Date的组合-->
    <rollingStyle value="Composite" />

    <!--当备份文件时,为文件名加的后缀-->
    <datePattern value="yyyyMMdd.log" />

    <!--日志最大个数,都是最新的-->
    <!--rollingStyle节点为Size时,只能有value个日志-->
    <!--rollingStyle节点为Composite时,每天有value个日志-->
    <maxSizeRollBackups value="20" />

    <!--可用的单位:KB|MB|GB-->
    <maximumFileSize value="3MB" />

    <!--置为true,当前最新日志文件名永远为file节中的名字-->
    <staticLogFileName value="true" />

    <!--输出级别在INFO和ERROR之间的日志-->
    <!--<filter type="log4net.Filter.LevelRangeFilter">
			<param name="LevelMin" value="INFO" />
			<param name="LevelMax" value="FATAL" />
		</filter>-->

    <!--必须结合起来用,第一个只过滤出WARN,第二个拒绝其它其它日志输出-->
    <filter type="log4net.Filter.LevelMatchFilter">
      <param name="LevelToMatch" value="WARN" />
    </filter>
    <filter type="log4net.Filter.DenyAllFilter" />

    <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
		%n(new line):换行 
		%d(datetime):输出当前语句运行的时刻 
		%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
		%t(thread id):当前语句所在的线程ID 
		%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
		%c(class):当前日志对象的名称，例如：
		%f(file):输出语句所在的文件名。
		%l(line)：输出语句所在的行号。-->

    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
    </layout>
  </appender>

  <!--记录日志到数据库-->
  <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
    <bufferSize value="1" />
    <!--缓冲大小-->
    <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <connectionString value="Data Source=.\SQLEXPRESS;Initial Catalog=CVDS;User ID=sa;Password=sasa" />
    <commandText value="INSERT INTO Log([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
    <parameter>
      <parameterName value="@log_date" />
      <dbType value="DateTime" />
      <layout type="log4net.Layout.RawTimeStampLayout" />
    </parameter>
    <parameter>
      <parameterName value="@thread" />
      <dbType value="String" />
      <size value="255" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%thread" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@log_level" />
      <dbType value="String" />
      <size value="50" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%level" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@logger" />
      <dbType value="String" />
      <size value="255" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%logger" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@message" />
      <dbType value="String" />
      <size value="4000" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%message" />
      </layout>
    </parameter>
    <parameter>
      <parameterName value="@exception" />
      <dbType value="String" />
      <size value="2000" />
      <layout type="log4net.Layout.ExceptionLayout" />
    </parameter>
  </appender>

  <!--按日志容量分割日志文件 10KB一个-->
  <appender name="LogFileAppenderBySize" type="log4net.Appender.RollingFileAppender" >
    <!--是否续写-->
    <param name="AppendToFile" value="true" />
    <!--最小锁定模型以允许多个进程可以写入同一个文件-->
    <param name="LockingModel" value="log4net.Appender.FileAppender.MinimalLock" />

    <param name="StaticLogFileName" value="true" />

    <!--按照文件的大小进行变换日志文件-->
    <param name="RollingStyle" value="Size" />
    <param name="File" value="log.txt" />
    <!--单个文件最大数量 好像只有在 按Size分割时有效-->
    <param name="MaximumFileSize" value="200KB"/>
    <!--保留的log文件数量 超过此数量后 自动删除之前的   好像只有在 按Size分割时有效-->
    <param name="MaxSizeRollBackups" value="2" />

    <param name="StaticLogFileName" value="false" />
    <layout type="log4net.Layout.PatternLayout">
      <param name="ConversionPattern" value="发生时间:%d %n事件级别:%level %n相关类名:%c%n程序文件:%F 第%L行%n日志内容:%m%n---------%n%n" />
    </layout>
  </appender>

  <!-- levels: OFF > FATAL > ERROR > WARN > INFO > DEBUG  > ALL -->
  <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
  <root>
    <priority value="ALL"/>
    <level value="ALL"/>
    <appender-ref ref="errorAppender" />
    <appender-ref ref="infoAppender" />
    <appender-ref ref="debugAppender" />
    <appender-ref ref="fatalAppender" />
    <appender-ref ref="warnAppender" />

  </root>

  <!--<logger name="ErrorLog" >
		<level value="ERROR"/>
		<appender-ref ref="errorAppender"/>
	</logger>-->

</log4net>
